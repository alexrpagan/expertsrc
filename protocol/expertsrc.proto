// Note that QuestionType is denoted by the Type enum
// and that all possible fields of those question types are
// included as "optional" fields.

// It is left to the application to determine which optional fields
// it actually wants. May want to write a wrapper class for
// each question to make this contract explicit.

// TODO: move type-specific optional fields to an extending 
// message definition as shown here:
// https://developers.google.com/protocol-buffers/docs/techniques

message QuestionBatch {
   enum Type {SCHEMAMAP = 1; TRAINING = 2;}	 
   required Type type = 1;
   optional string asker_name = 2;
   optional string source_name = 3;
   message Question {
       optional string domain_name = 1;
       message Choice {
           optional int32 global_attribute_id = 1;
	   optional string global_attribute_name = 2;
	   optional float confidence_score = 3;
       }
       repeated Choice choice = 2;
       optional int32 local_field_id = 3;
       optional string local_field_name = 4;
   }
   repeated Question question = 4;
}

message AnswerBatch {
   enum Type {SCHEMAMAP = 1; TRAINING = 2;}
   required Type type = 1;
   message Answer {
       optional int32 answerer_id = 1;
       optional float confidence = 2;
       optional float authority = 3;       
       optional int32 global_attribute_id = 4;
       optional int32 local_field_id = 5;
       optional bool is_match = 6;
   }
   repeated Answer answer = 2;
}

message ReviewBatch {
   enum Type {SCHEMAMAP = 1; TRAINING = 2;}
   required Type type = 1;
   message Review {
       optional int32 reviewer_id = 1;
       optional float confidence = 2;
       optional float authority = 3;
       optional int32 answer_id = 4;
       optional int32 is_correct = 5;
       optional string feedback = 6;
   }
   repeated Review review = 2;
}
